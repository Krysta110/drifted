{"ast":null,"code":"var _jsxFileName = \"/Users/richardchea/development/code/drifted/frontend/src/App.js\";\nimport React from 'react';\nimport friends from './friend';\nimport 'semantic-ui-css/semantic.min.css';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from './Header';\nimport FriendList from './FriendList'; // import FriendForm from './FriendForm'\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport Dashboard from './Dashboard';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.addFriend = e => {\n      e.preventDefault();\n      let newFriend = {\n        name: e.target[0].value,\n        phone: e.target[1].value,\n        email: e.target[2].value\n      };\n      let newArr = [...this.state.friends, newFriend];\n      this.setState({\n        friends: newArr\n      });\n    };\n\n    this.getFriends = () => {\n      fetch(\"http://localhost:3000/api/v1/friends\", {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.token)\n        }\n      }).then(res => res.json()).then(console.log);\n    };\n\n    this.state = {\n      testNew: \"testnew\",\n      test: \"test\",\n      form: false,\n      friends: []\n    };\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.getFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Show Friends\"), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/dashboard\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/friends\",\n      render: () => React.createElement(FriendList, {\n        friendObjs: this.state.friends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/richardchea/development/code/drifted/frontend/src/App.js"],"names":["React","friends","Button","CssBaseline","Header","FriendList","BrowserRouter","Route","Switch","Login","SignUp","Dashboard","App","Component","constructor","addFriend","e","preventDefault","newFriend","name","target","value","phone","email","newArr","state","setState","getFriends","fetch","method","headers","Authorization","localStorage","token","then","res","json","console","log","testNew","test","form","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport friends from './friend'\nimport 'semantic-ui-css/semantic.min.css';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from './Header'\nimport FriendList from './FriendList'\n// import FriendForm from './FriendForm'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Login from './Login'\nimport SignUp from './SignUp'\nimport Dashboard from './Dashboard';\n\n\n\nclass App extends React.Component{\n\n  constructor(){\n    super()\n    this.state = {\n      testNew: \"testnew\",\n      test: \"test\",\n      form: false,\n      friends: []\n    }\n  }\n\n  addFriend = (e) => {\n    e.preventDefault()\n  \n    let newFriend = {\n      name: e.target[0].value,\n      phone: e.target[1].value,\n      email: e.target[2].value\n    }\n\n    let newArr = [...this.state.friends, newFriend]\n\n    this.setState({\n      friends: newArr\n    })\n  }\n\n  getFriends = () => {\n      fetch(\"http://localhost:3000/api/v1/friends\",\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      })\n      .then(res => res.json())\n      .then(console.log)\n  }\n\n  render(){\n\n    return (\n   \n      <BrowserRouter>\n    <div>\n        < CssBaseline />\n        <Header/>\n        <Button onClick={this.getFriends}>Show Friends</Button>\n        <Switch>\n\n        <Route path=\"/login\" component={Login} />\n\n        <Route path=\"/signup\" component={SignUp} />\n\n        <Route path=\"/dashboard\" component={Dashboard} />\n\n\n        {/* <Route path=\"/paintings/new\" render = {(routeProps) =><AddForm {...routeProps} add={this.addContact} /> } /> */}\n\n        <Route path=\"/friends\" render={() => <FriendList friendObjs={this.state.friends} />}/>\n    \n        </Switch>\n        \n\n    </div>\n    </BrowserRouter>\n  )};\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}