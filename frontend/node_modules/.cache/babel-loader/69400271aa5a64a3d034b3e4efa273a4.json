{"ast":null,"code":"import _slicedToArray from \"/Users/richardchea/development/code/drifted/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/richardchea/development/code/drifted/frontend/src/AddFriendForm.js\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nconst options = {\n  method: 'PATCH',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  body: JSON.stringify({\n    name: name,\n    phone: phone,\n    email: email,\n    recurrence_integer: recInt,\n    recurrence_unit: recUnit\n  })\n};\n\nconst handleSubmit = (name, phone, email, recInt, recUnit) => {// console.log('Name:', name)\n  // console.log('Phone:', phone)\n  // console.log('Email:', email)\n  // console.log('recint:', recInt)\n  // console.log('recunit:', recUnit)\n  // fetch('http://localhost:3000/api/v1/friends', options)\n};\n\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        name = _React$useState2[0],\n        setName = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        phone = _React$useState4[0],\n        setPhone = _React$useState4[1];\n\n  const _React$useState5 = React.useState(''),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        email = _React$useState6[0],\n        setEmail = _React$useState6[1];\n\n  const _React$useState7 = React.useState(''),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        recInt = _React$useState8[0],\n        setRecInt = _React$useState8[1];\n\n  const _React$useState9 = React.useState(''),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        recUnit = _React$useState10[0],\n        setRecUnit = _React$useState10[1]; // const handleChange = (event) => {\n  //   setName(event.target.value);\n  // };\n\n\n  return (// console.log('Name:', name),\n    // console.log('Phone:', phone),\n    // console.log('Email:', email),\n    // console.log('recint:', recInt),\n    // console.log('recunit:', recUnit),\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"demo-customized-textbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Name\"), React.createElement(BootstrapInput, {\n      id: \"demo-customized-textbox\",\n      onChange: e => setName(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"demo-customized-textbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(BootstrapInput, {\n      id: \"demo-customized-textbox\",\n      onChange: e => setPhone(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-customized-textbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Email\"), React.createElement(BootstrapInput, {\n      id: \"demo-customized-textbox\",\n      onChange: e => setEmail(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-customized-textbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Number\"), React.createElement(BootstrapInput, {\n      id: \"demo-customized-textbox\",\n      type: \"number\",\n      onChange: e => setRecInt(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"demo-customized-select-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Unit\"), React.createElement(NativeSelect, {\n      id: \"demo-customized-select-native\",\n      onChange: e => setRecUnit(e.target.value),\n      input: React.createElement(BootstrapInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Week\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Month\"))), React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => handleSubmit(name, phone, email, recInt, recUnit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Add Friend\"))\n  );\n}","map":{"version":3,"sources":["/Users/richardchea/development/code/drifted/frontend/src/AddFriendForm.js"],"names":["React","makeStyles","withStyles","InputLabel","MenuItem","FormControl","Select","NativeSelect","InputBase","Button","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","margin","options","method","headers","body","JSON","stringify","name","phone","email","recurrence_integer","recInt","recurrence_unit","recUnit","handleSubmit","CustomizedSelects","classes","useState","setName","setPhone","setEmail","setRecInt","setRecUnit","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst options = {\n  method: 'PATCH',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  body: JSON.stringify({\n    name: name,\n    phone: phone,\n    email: email,\n    recurrence_integer: recInt,\n    recurrence_unit: recUnit\n  })\n}\n\nconst handleSubmit = (name, phone, email, recInt, recUnit) => {\n  // console.log('Name:', name)\n  // console.log('Phone:', phone)\n  // console.log('Email:', email)\n  // console.log('recint:', recInt)\n  // console.log('recunit:', recUnit)\n  // fetch('http://localhost:3000/api/v1/friends', options)\n  \n}\n\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n  const [name, setName] = React.useState('');\n  const [phone, setPhone] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [recInt, setRecInt] = React.useState('');\n  const [recUnit, setRecUnit] = React.useState('');\n  // const handleChange = (event) => {\n  //   setName(event.target.value);\n  // };\n\n  return (\n    // console.log('Name:', name),\n    // console.log('Phone:', phone),\n    // console.log('Email:', email),\n    // console.log('recint:', recInt),\n    // console.log('recunit:', recUnit),\n\n\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"demo-customized-textbox\">Name</InputLabel>\n        <BootstrapInput id=\"demo-customized-textbox\" onChange={(e) => setName(e.target.value)}/>\n      </FormControl>\n\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"demo-customized-textbox\">Phone Number</InputLabel>\n        <BootstrapInput id=\"demo-customized-textbox\" onChange={(e) => setPhone(e.target.value)}/>\n      </FormControl>\n\n      <FormControl className={classes.margin}>\n        <InputLabel id = \"demo-customized-textbox\" >Email</InputLabel>\n        <BootstrapInput id=\"demo-customized-textbox\" onChange={(e) => setEmail(e.target.value)}/>\n      </FormControl>\n\n      <FormControl className={classes.margin}>\n        <InputLabel id = \"demo-customized-textbox\" >Number</InputLabel>\n        <BootstrapInput id=\"demo-customized-textbox\" type='number' onChange={(e) => setRecInt(e.target.value)}/>\n      </FormControl>\n\n\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"demo-customized-select-native\">Unit</InputLabel>\n        <NativeSelect\n          id=\"demo-customized-select-native\"\n          onChange={(e) => setRecUnit(e.target.value)}\n          input={<BootstrapInput />}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option>Day</option>\n          <option>Week</option>\n          <option>Month</option>\n        </NativeSelect>\n      </FormControl>\n      <Button color=\"primary\" onClick={() => handleSubmit(name, phone, email, recInt, recUnit)}>Add Friend</Button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}